[gcode_macro _ASSERT_PROBE_STATE]
description: ensures probe is in a known state; QUERY_PROBE must have been called before this macro!
gcode:
    ## QUERY_PROBE manually-verified results, when microswitch not depressed
    ## "TRIGGERED" -> 1 :: probe stowed
    ## "open"      -> 0 :: probe deployed
    {% set last_query_state = "stowed" if printer.probe.last_query == 1 else "deployed" %}

    {% if params.MUST_BE != last_query_state %}
        { action_raise_error("expected probe state to be {} but is {} ({})".format(params.MUST_BE, last_query_state, printer.probe.last_query)) }
    {% else %}
        ## all good; update state
        SET_GCODE_VARIABLE MACRO=EuclidProbe VARIABLE=probe_state VALUE="'{ last_query_state }'"
    {% endif %}

[gcode_macro ASSERT_PROBE_DEPLOYED]
description: error if probe not deployed
gcode:
    ; wait for moves to finish, then pause 0.25s for detection
    M400
    G4 P250

    QUERY_PROBE
    _ASSERT_PROBE_STATE MUST_BE=deployed

[gcode_macro ASSERT_PROBE_STOWED]
description: error if probe not stowed
gcode:
    ; wait for moves to finish, then pause 0.25s for detection
    M400
    G4 P250

    QUERY_PROBE
    _ASSERT_PROBE_STATE MUST_BE=stowed

# Macro to perform a modified z_tilt
[gcode_macro EUCLID_Z_TILT]
gcode:
  QUERY_PROBE
  DEPLOY_PROBE                  ; deploy Euclid Probe if needed
  Z_TILT_ADJUST         ; check bed level
  QUERY_PROBE
  STOW_PROBE                  ; dock Euclid Probe

# Macro to perform a modified bed mesh calibration
[gcode_macro EUCLID_BED_MESH_CALIBRATION]
gcode:
  QUERY_PROBE
  DEPLOY_PROBE                                ; deploy Euclid Probe if needed
  BED_MESH_CALIBRATE PROFILE=ratos    ; check bed level
  QUERY_PROBE
  STOW_PROBE                                ; dock Euclid Probe



# Macro to Deploy Bed Probe
[gcode_macro DEPLOY_PROBE]
description: deploy Euclid probe
gcode:
  {% set euclid_probe = printer["gcode_macro EuclidProbe"] %}
  {% if printer.probe.last_query %}
  G90
  M117 Grabbing probe
  ; set approach elevation to clear probe over bed on fixed gantry machine
  G0 Z{ euclid_probe.bed_clearance } F500

  ; move the carraige to safe position to start probe pickup
  G0 X{ euclid_probe.position_preflight[0] } Y{ euclid_probe.position_preflight[1] } F{ euclid_probe.move_speeds }

  ;  move to the side of the dock
  G0 X{ euclid_probe.position_side[0] } Y{ euclid_probe.position_side[1] } F{ euclid_probe.move_speeds }

  ; wait 1/4 second
  M400
  G4 P250

  ;  move sideways over the dock to pick up probe
  G0 X{ euclid_probe.position_dock[0] } Y{ euclid_probe.position_dock[1] } F1500

  ; wait 1/4 second
  M400
  G4 P250

  ; confirm deploy was successful
  ASSERT_PROBE_DEPLOYED

  ; move out of the dock in a straight line
  G0 X{ euclid_probe.position_exit[0] } Y{ euclid_probe.position_exit[1] } F{ euclid_probe.move_speeds }
  {% else %}
  M117 Already deployed
  {% endif %}


# Macro to Stow Bed Leveling Probe
[gcode_macro STOW_PROBE]
gcode:
  {% set euclid_probe = printer["gcode_macro EuclidProbe"] %}
  {% if not printer.probe.last_query and printer["gcode_macro RatOS"].start_of_print|lower == "false" %}
  G90
  M117 Stowing probe
  ; set approach elevation for fixed gantry system to clear probe over bed
  G0 Z{ euclid_probe.bed_clearance } F3000

  ; move to the exit/re-entry staging position
  G0 X{ euclid_probe.position_exit[0] } Y{ euclid_probe.position_exit[1] } F{ euclid_probe.move_speeds }

  ; slowly move into dock
  G0 X{ euclid_probe.position_dock[0] } Y{ euclid_probe.position_dock[1] } F3000

  ; wait for moves to finish, pause to force 90deg travel swipe
  M400
  G4 P250

  ; quick swipe off
  G0 X{ euclid_probe.position_side[0] } Y{ euclid_probe.position_side[1] } F{ euclid_probe.move_speeds }

  ; confirm stowing was successful
  ASSERT_PROBE_STOWED

  {% else %}
  M117 Already docked
  {% endif %}


  

[gcode_macro _START_PRINT_BED_MESH]
gcode:
  SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=start_of_print VALUE=False ; last step in start print dance, dock the probe when done
  {% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
  M117 Euclid bed mesh start
  RESPOND MSG="Euclid bed mesh start"
  QUERY_PROBE
  DEPLOY_PROBE          ; deploy Euclid Probe if needed
  PAM PROFILE=pamratos
  QUERY_PROBE
  STOW_PROBE          ; dock probe
  {% else %}
  QUERY_PROBE
  STOW_PROBE    
  BED_MESH_PROFILE LOAD=pamratos
  {% endif %}


[gcode_macro _START_PRINT_AFTER_HEATING_BED]
gcode:
  {% if printer["gcode_macro RatOS"].preheat_extruder|lower == 'true' %}
  M117 Pre-heating extruder...
  # Wait for extruder to reach 150 so an inductive probe (if present) is at a predictable temp. 
  # Also allows the bed heat to spread a little, and softens any plastic that might be stuck to the nozzle.
  M104 S150
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM=150
  {% endif %}
  M117 Adjusting for tilt...
  # Adjust bed tilt
  EUCLID_Z_TILT
  M117 Rehoming after tilt adjustment...
  # Home again as Z will have changed after tilt adjustment and bed heating.
  G28 Z


[gcode_macro PROBE_CALIBRATE]
rename_existing: PROBE_CALIBRATE_ORIG
gcode:
    {% set euclid_probe = printer["gcode_macro EuclidProbe"] %}

    DEPLOY_PROBE
    G90
    G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F{ euclid_probe.move_speeds }
    PROBE_CALIBRATE_ORIG
    STOW_PROBE
